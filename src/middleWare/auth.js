const jwt = require("jsonwebtoken")
const secretKey='functionUp';
const userAuth = function(req, res, next) {
    try {
        const token = req.header('Authorization'); //setting token in the request header.
       console.log(token);           
        if (!token) {
            return res.status(403).send({ status: false, message: `Missing authentication token in request` })
        }

        let Bearer = token.split(' ')
        console.log(Bearer)
        const decoded = jwt.verify(Bearer[1], secretKey); //decoding authentication token
        console.log(decoded);
        if (!decoded) {
            return res.status(400).send({ status: false, message: "Invalid authentication token in request headers." })
        }
        /* if (Date.now() > (decoded.exp) * 1000) { //setting time expiration message
            return res.status(403).send({ status: false, message: "Session expired! Please login again." })
        }
 */
        req.userId = decoded.userId; //matching userId for which token generated by the userId provided in the request.
        console.log(req.userId);
        next()

    } catch (error) {
        return res.status(500).send({ status: false, message: error.message })
    }
}

module.exports.userAuth=userAuth;